run(Ts=1.0)
  #Set true to stop execution
  persistent stop

  #Initialize internal state
  persistent auto,track,windup,t_old=time(),
             Ts=Ts

  while not(stop)
    #Time when loop starts
    t0=time()

    #Read signals from runtime or hardware
    r=get_r()
    y=get_y()
    uff=get_uff()
    utrack=get_utrack()
    uman=get_uman()
    
    #Compute time between two executions
    t=time()
    Tx=(t-t_old)/Ts

    #Invoke the PID update
    PID(r,y,uff,uman,utrack,Tx,
            track,auto,windup)

    t_old=t #State update
    sleep(Ts-(t-t0)) #(Non-blocking) sleep
  end
end